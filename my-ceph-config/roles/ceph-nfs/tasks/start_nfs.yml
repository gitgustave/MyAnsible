---
- name: set_fact docker_exec_cmd_nfs
  set_fact:
    docker_exec_cmd_nfs: "{{ container_binary }} exec ceph-mon-{{ hostvars[groups[mon_group_name][0]]['ansible_hostname'] }}"
  when:
    - containerized_deployment | bool

#### GENERATE CONF
- name: create /etc/ganesha
  file:
    path: /etc/ganesha
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: generate ganesha configuration file
  template:
    src: "ganesha.conf.j2"
    dest: "/etc/ganesha/ganesha.conf"
    owner: root
    group: root
    mode: 0644
###### 

###### CREATE GRACE DB
- name: check if rados rados grace db object exists
  shell: "{{ docker_exec_cmd_nfs | default('') }} rados -p {{ ceph_nfs_ganesha_pool }} -n {{ ceph_nfs_grace_namespace }} --cluster {{ cluster }} ls | grep grace/"
  changed_when: false
  failed_when: false
  register: rados_grace_exists
  check_mode: no
  when:
    - ceph_nfs_rados_backend | bool
    - ceph_nfs_rados_backend_driver == 'rados_cluster'
  delegate_to: "{{ groups[mon_group_name][0] }}"
  
- name: initialize ganesha rados grace database
  command: "{{ docker_exec_cmd_nfs | default('') }} ganesha-rados-grace -p {{ ceph_nfs_ganesha_pool }} -n {{ ceph_nfs_grace_namespace }} add {{ ansible_hostname }}"
  when:
    - ceph_nfs_rados_backend | bool
    - ceph_nfs_rados_backend_driver == 'rados_cluster'
    - rados_grace_exists.rc != 0
######## 

- name: generate ganesha idmap.conf file
  action: config_template
  args:
    src: "idmap.conf.j2"
    dest: "{{ ceph_nfs_idmap_conf }}"
    owner: "root"
    group: "root"
    mode: "0644"
    config_overrides: "{{ idmap_conf_overrides }}"
    config_type: ini
  notify: restart ceph nfss

- name: create exports directory
  file:
    path: /etc/ganesha/export.d
    state: directory
    owner: "root"
    group: "root"
    mode: "0755"
  when: ceph_nfs_dynamic_exports | bool

##### CREATE EXPORT INDEX OBJECTS
- name: check if rados export index object exists
  shell: "{{ docker_exec_cmd_nfs | default('') }} rados -p {{ ceph_nfs_ganesha_pool  }} -N {{ ceph_nfs_export_namespace }} --cluster {{ cluster }} ls|grep conf-{{ ansible_hostname }}/"
  changed_when: false
  failed_when: false
  register: rados_index_exists
  check_mode: no
  when:
    - ceph_nfs_rados_backend | bool
  delegate_to: "{{ groups[mon_group_name][0] }}"

- name: create an empty rados export index object
  command: "{{ docker_exec_cmd_nfs | default('') }} rados -p {{ ceph_nfs_ganesha_pool }} -N {{ ceph_nfs_export_namespace }} --cluster {{ cluster }} put conf-{{ ansible_hostname }} /dev/null"
  when:
    - ceph_nfs_rados_backend | bool 
    - rados_index_exists.rc != 0
  delegate_to: "{{ groups[mon_group_name][0] }}"

####### CREATE EXPORT INDEX OBJECTS

- name: generate systemd unit file
  become: true
  template:
    src: "{{ role_path }}/templates/ceph-nfs.service.j2"
    dest: /etc/systemd/system/ceph-nfs@.service
    owner: "root"
    group: "root"
    mode: "0644"
  when:
    - containerized_deployment | bool
  notify:
    - restart ceph nfss

- name: systemd start nfs container
  systemd:
    name: ceph-nfs@{{ ceph_nfs_service_suffix | default(ansible_facts['hostname']) }}
    state: started
    enabled: yes
    masked: no
    daemon_reload: yes
  when:
    - containerized_deployment | bool
    - ceph_nfs_enable_service | bool

- name: start nfs gateway service - active active
  systemd:
    name: nfs-ganesha
    state: started
    enabled: yes
    masked: no
  when:
    - not containerized_deployment | bool
    - ceph_nfs_enable_service | bool
    - ceph_nfs_rados_backend_driver == 'rados_cluster'

- name: start nfs gateway service - active passive
  systemd:
    name: nfs-ganesha
    state: started
    enabled: yes
    masked: no
  run_once: true
  when:
    - not containerized_deployment | bool
    - ceph_nfs_enable_service | bool
    - ceph_nfs_rados_backend_driver == 'rados_ng'